import org.apache.tools.ant.taskdefs.condition.Os

plugins {
    id 'java'
    id 'java-library'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8


repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    //Testing
    testImplementation 'junit:junit:4.13.2'

    //Core
    implementation 'com.github.magpiebridge:magpiebridge:0.1.2'
    implementation project(':IntraJ')
    implementation 'org.soot-oss:soot:4.2.1'

    //implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.10.0'
    implementation 'com.github.MagpieBridge:IRConverter:master-SNAPSHOT'
}

tasks.register('copyJastAddExtras', Copy) {
    description 'Copies over extra jastadd files to IntraJ. Intended as prebuild step for analysis extenstions.'

    from layout.projectDir.dir("src/jastadd/analysis")
    into layout.projectDir.dir("IntraJ/src/jastadd/analysis")
}
build.dependsOn 'copyJastAddExtras'


task vsce(type:Exec) {
    workingDir "."
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
         commandLine 'cmd', '/c', 'generate_vsce.bat'
         println "DETECTED OS: windows. Running `generate_vsce.bat`"
    }else{
         commandLine 'sh', 'generate_vsce.sh'
         println "DETECTED OS: not windows. Running `generate_vsce.sh`"
    }
    
    standardOutput = new ByteArrayOutputStream()

    ext.output = {
        return standardOutput.toString()
    }
}
vsce.dependsOn 'build'


task genJar(type: Jar) { 
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } } {
        exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
    }
    from sourceSets.main.output
    manifest {
        attributes 'Main-Class': 'intrep.core.Main'
    }
    baseName = 'IntRep'
    destinationDir= file('vscode')
}


artifacts {
    archives  genJar
}